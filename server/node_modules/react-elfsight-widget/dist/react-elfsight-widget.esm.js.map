{"version":3,"file":"react-elfsight-widget.esm.js","sources":["../src/useLoadPlatform.ts","../src/ElfsightWidget.tsx"],"sourcesContent":["import { useEffect } from 'react';\n\nconst PLATFORM_URL = 'https://static.elfsight.com/platform/platform.js';\n\nexport function useLoadPlatform() {\n  useEffect(() => {\n    const isPlatformLoaded =\n      'eapps' in window ||\n      !!document.querySelector(`script[src=\"${PLATFORM_URL}\"]`);\n\n    if (isPlatformLoaded) {\n      return;\n    }\n\n    const platformScript = document.createElement('script');\n    platformScript.src = PLATFORM_URL;\n    platformScript.dataset.testid = 'platform-script';\n\n    document.body.appendChild(platformScript);\n\n    // platform cannot be loaded twice on the sample page\n    /* eslint-disable-next-line react-hooks/exhaustive-deps */\n  }, []);\n}\n","import type { HTMLAttributes } from 'react';\nimport React, { memo, useEffect } from 'react';\nimport { useLoadPlatform } from './useLoadPlatform';\n\nexport interface ElfsightWidgetProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * @deprecated since 1.1.0, please use widgetId instead\n   *\n   * Widget identifier (deprecated).\n   * Use `widgetId` instead.\n   */\n  widgetID?: never;\n\n  /**\n   * Widget identifier.\n   * The unique identifier for the widget, obtained from the installation code.\n   * Example: `elfsight-app-85d18ddb-c202-421e-9a88-6c099d7a7833` â†’ `85d18ddb-c202-421e-9a88-6c099d7a7833`.\n   */\n  widgetId: string;\n\n  /**\n   * Enables lazy loading.\n   * Accepts a boolean or a mode.\n   */\n  lazy?: boolean | NamedLazyMode;\n}\n\nexport type NamedLazyMode =\n  | `default`\n  | 'first-activity'\n  | 'in-viewport'\n  | 'disabled';\n\nexport const ElfsightWidget = memo(function ElfsightWidget({\n  widgetId,\n  widgetID,\n  lazy,\n  className,\n  ...forwardedProps\n}: ElfsightWidgetProps) {\n  useEffect(() => {\n    if (widgetID) {\n      console.debug(\n        'Note that widgetID is deprecated since version 1.1.0. Please use widgetId instead.'\n      );\n    }\n  }, [widgetID]);\n\n  useLoadPlatform();\n\n  const finalWidgetId = widgetId ?? widgetID;\n  const widgetClassName = `elfsight-app-${finalWidgetId}`;\n\n  let effectiveLazy: string | undefined;\n  if (typeof lazy === 'boolean') {\n    effectiveLazy = lazy ? 'default' : undefined;\n  } else {\n    effectiveLazy = lazy;\n  }\n\n  return (\n    <div\n      className={[widgetClassName, className].filter(Boolean).join(' ')}\n      data-elfsight-app-lazy={effectiveLazy}\n      {...forwardedProps}\n    />\n  );\n});\n"],"names":["PLATFORM_URL","useLoadPlatform","useEffect","isPlatformLoaded","window","document","querySelector","platformScript","createElement","src","dataset","testid","body","appendChild","ElfsightWidget","memo","_ref","widgetId","widgetID","lazy","className","forwardedProps","_objectWithoutPropertiesLoose","_excluded","console","debug","finalWidgetId","widgetClassName","effectiveLazy","undefined","React","filter","Boolean","join"],"mappings":";;;;;;;;;;;;;;;AAEA,IAAMA,YAAY,GAAG,kDAAkD;SAEvDC,eAAeA;EAC7BC,SAAS,CAAC;IACR,IAAMC,gBAAgB,GACpB,OAAO,IAAIC,MAAM,IACjB,CAAC,CAACC,QAAQ,CAACC,aAAa,mBAAgBN,YAAY,SAAK;IAE3D,IAAIG,gBAAgB,EAAE;MACpB;;IAGF,IAAMI,cAAc,GAAGF,QAAQ,CAACG,aAAa,CAAC,QAAQ,CAAC;IACvDD,cAAc,CAACE,GAAG,GAAGT,YAAY;IACjCO,cAAc,CAACG,OAAO,CAACC,MAAM,GAAG,iBAAiB;IAEjDN,QAAQ,CAACO,IAAI,CAACC,WAAW,CAACN,cAAc,CAAC;;;GAI1C,EAAE,EAAE,CAAC;AACR;;;ACtBA,IAgCaO,cAAc,gBAAGC,IAAI,CAAC,SAASD,cAAcA,CAAAE,IAAA;MACxDC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;IACRC,QAAQ,GAAAF,IAAA,CAARE,QAAQ;IACRC,IAAI,GAAAH,IAAA,CAAJG,IAAI;IACJC,SAAS,GAAAJ,IAAA,CAATI,SAAS;IACNC,cAAc,GAAAC,6BAAA,CAAAN,IAAA,EAAAO,SAAA;EAEjBrB,SAAS,CAAC;IACR,IAAIgB,QAAQ,EAAE;MACZM,OAAO,CAACC,KAAK,CACX,oFAAoF,CACrF;;GAEJ,EAAE,CAACP,QAAQ,CAAC,CAAC;EAEdjB,eAAe,EAAE;EAEjB,IAAMyB,aAAa,GAAGT,QAAQ,aAARA,QAAQ,cAARA,QAAQ,GAAIC,QAAQ;EAC1C,IAAMS,eAAe,qBAAmBD,aAAe;EAEvD,IAAIE,aAAiC;EACrC,IAAI,OAAOT,IAAI,KAAK,SAAS,EAAE;IAC7BS,aAAa,GAAGT,IAAI,GAAG,SAAS,GAAGU,SAAS;GAC7C,MAAM;IACLD,aAAa,GAAGT,IAAI;;EAGtB,OACEW;IACEV,SAAS,EAAE,CAACO,eAAe,EAAEP,SAAS,CAAC,CAACW,MAAM,CAACC,OAAO,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC;8BACzCL;KACpBP,cAAc,EAClB;AAEN,CAAC,CAAC;;;;"}