'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var React = require('react');
var React__default = _interopDefault(React);

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }
  return target;
}

var PLATFORM_URL = 'https://static.elfsight.com/platform/platform.js';
function useLoadPlatform() {
  React.useEffect(function () {
    var isPlatformLoaded = 'eapps' in window || !!document.querySelector("script[src=\"" + PLATFORM_URL + "\"]");
    if (isPlatformLoaded) {
      return;
    }
    var platformScript = document.createElement('script');
    platformScript.src = PLATFORM_URL;
    platformScript.dataset.testid = 'platform-script';
    document.body.appendChild(platformScript);
    // platform cannot be loaded twice on the sample page
    /* eslint-disable-next-line react-hooks/exhaustive-deps */
  }, []);
}

var _excluded = ["widgetId", "widgetID", "lazy", "className"];
var ElfsightWidget = /*#__PURE__*/React.memo(function ElfsightWidget(_ref) {
  var widgetId = _ref.widgetId,
    widgetID = _ref.widgetID,
    lazy = _ref.lazy,
    className = _ref.className,
    forwardedProps = _objectWithoutPropertiesLoose(_ref, _excluded);
  React.useEffect(function () {
    if (widgetID) {
      console.debug('Note that widgetID is deprecated since version 1.1.0. Please use widgetId instead.');
    }
  }, [widgetID]);
  useLoadPlatform();
  var finalWidgetId = widgetId !== null && widgetId !== void 0 ? widgetId : widgetID;
  var widgetClassName = "elfsight-app-" + finalWidgetId;
  var effectiveLazy;
  if (typeof lazy === 'boolean') {
    effectiveLazy = lazy ? 'default' : undefined;
  } else {
    effectiveLazy = lazy;
  }
  return React__default.createElement("div", Object.assign({
    className: [widgetClassName, className].filter(Boolean).join(' '),
    "data-elfsight-app-lazy": effectiveLazy
  }, forwardedProps));
});

exports.ElfsightWidget = ElfsightWidget;
//# sourceMappingURL=react-elfsight-widget.cjs.development.js.map
